{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport Logo from \"/Images/Logo.png\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Homepage() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoggedIn = _useState6[0],\n    setIsLoggedIn = _useState6[1];\n  var navigation = useNavigation();\n  var handleLogin = function handleLogin() {\n    if (username === \"Goose\" && password === \"Tom\") {\n      setIsLoggedIn(true);\n      console.log(\"Logged in!\");\n      navigation.navigate(\"Dashboard\");\n    } else {\n      setIsLoggedIn(false);\n      alert(\"No entry for you!\");\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: Logo,\n      style: styles.logo\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username,\n      selectionColor: \"transparent\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsxs(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: [\",\", _jsx(Text, {\n        style: styles.buttonText,\n        children: \"LOGIN\"\n      })]\n    }), isLoggedIn && _jsx(Text, {\n      style: styles.loginMessage,\n      children: \"You are logged in!\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: \"#C6F91F\",\n    fontSize: 20\n  },\n  logo: {\n    width: 200,\n    height: 200\n  },\n  input: {\n    width: 200,\n    height: 40,\n    borderWidth: 1,\n    borderColor: \"#C6F91F\",\n    backgroundColor: \"#36413E\",\n    color: \"#4DD8FF\",\n    marginBottom: 20,\n    paddingLeft: 10\n  },\n  buttonText: {\n    display: \"flex\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 5,\n    color: \"#36413E\",\n    backgroundColor: \"#4DD8FF\",\n    width: 80,\n    height: 30,\n    fontSize: 15,\n    fontWeight: \"bold\",\n    elevation: 5,\n    shadowColor: \"#36413E\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.9,\n    shadowRadius: 3.84\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#5D5E60\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Homepage;","map":{"version":3,"names":["React","useState","useNavigation","View","Text","TextInput","Image","Button","StyleSheet","Touchable","Logo","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Homepage","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLoggedIn","setIsLoggedIn","navigation","handleLogin","console","log","navigate","alert","style","styles","container","children","source","logo","input","placeholder","onChangeText","text","value","selectionColor","secureTextEntry","button","onPress","buttonText","loginMessage","create","flex","justifyContent","alignItems","color","fontSize","width","height","borderWidth","borderColor","backgroundColor","marginBottom","paddingLeft","display","alignContent","paddingTop","fontWeight","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"sources":["/Users/tom/Desktop/DnD/DashAndDine/Screens/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n  View,\n  Text,\n  TextInput,\n  Image,\n  Button,\n  StyleSheet,\n  Touchable,\n} from \"react-native\";\nimport Logo from \"/Images/Logo.png\";\nimport { TouchableOpacity } from \"react-native-web\";\n\nfunction Homepage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigation = useNavigation();\n\n  const handleLogin = () => {\n    if (username === \"Goose\" && password === \"Tom\") {\n      setIsLoggedIn(true);\n      console.log(\"Logged in!\");\n\n      navigation.navigate(\"Dashboard\");\n    } else {\n      setIsLoggedIn(false);\n      alert(\"No entry for you!\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* <Text style={styles.text}>Hello World!...again</Text> */}\n      <Image source={Logo} style={styles.logo} />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        onChangeText={(text) => setUsername(text)}\n        value={username}\n        selectionColor=\"transparent\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        onChangeText={(text) => setPassword(text)}\n        value={password}\n      />\n\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\n        ,<Text style={styles.buttonText}>LOGIN</Text>\n      </TouchableOpacity>\n\n      {isLoggedIn && (\n        <Text style={styles.loginMessage}>You are logged in!</Text>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  text: {\n    color: \"#C6F91F\",\n    fontSize: 20,\n  },\n  logo: {\n    width: 200,\n    height: 200,\n  },\n\n  input: {\n    width: 200,\n    height: 40,\n    borderWidth: 1,\n    borderColor: \"#C6F91F\",\n    backgroundColor: \"#36413E\",\n    color: \"#4DD8FF\",\n    marginBottom: 20,\n    paddingLeft: 10,\n  },\n\n  buttonText: {\n    display: \"flex\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 5,\n    color: \"#36413E\",\n    backgroundColor: \"#4DD8FF\",\n    width: 80,\n    height: 30,\n    fontSize: 15,\n    fontWeight: \"bold\",\n    elevation: 5,\n    shadowColor: \"#36413E\",\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.9,\n    shadowRadius: 3.84,\n  },\n\n  container: {\n    flex: 1,\n    backgroundColor: \"#5D5E60\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default Homepage;\n\n//COMMENTED PREVIOUS CODE FOR MY SANITY\n\n// import React, { useState } from 'react';\n// import { View, Text, TextInput,Image, Button, StyleSheet, Touchable } from 'react-native';\n// import Logo from '/Images/Logo.png';\n// import { TouchableOpacity } from 'react-native-web';\n// import ProfilePic from '/Images/Goose.jpg';\n\n// function Dashboard ()   {\n\n//     return (\n//         <View style={styles.container}>\n//             <Text style={styles.text}>Hello World!...again</Text>\n//             <Image source={Logo} style={styles.logo} />\n//             <Image source={ProfilePic} style={styles.profilePic} />\n\n//         </View>\n//     )\n// }\n\n// const styles = StyleSheet.create({\n//     container: {\n//       flex: 1,\n//       justifyContent: 'center',\n//       alignItems: 'center',\n//     },\n//     text: {\n//       color: '#C6F91F',\n//       fontSize: 20,\n\n//     },\n//     logo: {\n//       width: 200,\n//       height: 200,\n//     },\n\n//     input: {\n//       width: 200,\n//       height: 40,\n//       borderWidth: 1,\n//       borderColor: '#C6F91F',\n//       backgroundColor: '#36413E',\n//       color: '#4DD8FF',\n//       marginBottom: 20,\n//       paddingLeft: 10,\n//     },\n\n//     buttonText: {\n//       display: 'flex',\n//       alignContent: 'center',\n//       justifyContent: 'center',\n//       paddingTop: 5,\n//       color: '#36413E',\n//       backgroundColor: '#4DD8FF',\n//       width: 80,\n//       height: 30,\n//       fontSize: 15,\n//       fontWeight: 'bold',\n//       elevation: 5,\n//       shadowColor: '#36413E',\n//       shadowOffset: { width: 2, height: 2 },\n//       shadowOpacity: 0.9,\n//       shadowRadius: 3.84,\n\n//     },\n\n//     container: {\n//       flex: 1,\n//       backgroundColor: '#5D5E60',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//     },\n\n//   });\n\n// export default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAUzD,OAAOC,IAAI,MAAM,kBAAkB;AAAC,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGpC,SAASC,QAAQA,CAAA,EAAG;EAClB,IAAAC,SAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAoCzB,QAAQ,CAAC,KAAK,CAAC;IAAA0B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAMG,UAAU,GAAG5B,aAAa,CAAC,CAAC;EAElC,IAAM6B,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIX,QAAQ,KAAK,OAAO,IAAII,QAAQ,KAAK,KAAK,EAAE;MAC9CK,aAAa,CAAC,IAAI,CAAC;MACnBG,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAEzBH,UAAU,CAACI,QAAQ,CAAC,WAAW,CAAC;IAClC,CAAC,MAAM;MACLL,aAAa,CAAC,KAAK,CAAC;MACpBM,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF,CAAC;EAED,OACEpB,KAAA,CAACZ,IAAI;IAACiC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAE5B1B,IAAA,CAACP,KAAK;MAACkC,MAAM,EAAE9B,IAAK;MAAC0B,KAAK,EAAEC,MAAM,CAACI;IAAK,CAAE,CAAC,EAE3C5B,IAAA,CAACR,SAAS;MACR+B,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKxB,WAAW,CAACwB,IAAI,CAAC;MAAA,CAAC;MAC1CC,KAAK,EAAE1B,QAAS;MAChB2B,cAAc,EAAC;IAAa,CAC7B,CAAC,EAEFlC,IAAA,CAACR,SAAS;MACR+B,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBK,eAAe,EAAE,IAAK;MACtBJ,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKpB,WAAW,CAACoB,IAAI,CAAC;MAAA,CAAC;MAC1CC,KAAK,EAAEtB;IAAS,CACjB,CAAC,EAEFT,KAAA,CAACJ,gBAAgB;MAACyB,KAAK,EAAEC,MAAM,CAACY,MAAO;MAACC,OAAO,EAAEnB,WAAY;MAAAQ,QAAA,GAAC,GAC3D,EAAA1B,IAAA,CAACT,IAAI;QAACgC,KAAK,EAAEC,MAAM,CAACc,UAAW;QAAAZ,QAAA,EAAC;MAAK,CAAM,CAAC;IAAA,CAC7B,CAAC,EAElBX,UAAU,IACTf,IAAA,CAACT,IAAI;MAACgC,KAAK,EAAEC,MAAM,CAACe,YAAa;MAAAb,QAAA,EAAC;IAAkB,CAAM,CAC3D;EAAA,CACG,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAG7B,UAAU,CAAC6C,MAAM,CAAC;EAC/Bf,SAAS,EAAE;IACTgB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDX,IAAI,EAAE;IACJY,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDjB,IAAI,EAAE;IACJkB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EAEDlB,KAAK,EAAE;IACLiB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,eAAe,EAAE,SAAS;IAC1BN,KAAK,EAAE,SAAS;IAChBO,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EAEDd,UAAU,EAAE;IACVe,OAAO,EAAE,MAAM;IACfC,YAAY,EAAE,QAAQ;IACtBZ,cAAc,EAAE,QAAQ;IACxBa,UAAU,EAAE,CAAC;IACbX,KAAK,EAAE,SAAS;IAChBM,eAAe,EAAE,SAAS;IAC1BJ,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVF,QAAQ,EAAE,EAAE;IACZW,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;MAAEb,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCa,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE;EAChB,CAAC;EAEDpC,SAAS,EAAE;IACTgB,IAAI,EAAE,CAAC;IACPS,eAAe,EAAE,SAAS;IAC1BP,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAevC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}